			# Mercadinho 4.0
		# Projeto realizado entre Dezembro/2022 e Janeiro/2023

1. Tools
	1.1 - Vite (Build for Production + Plugins(Uglify, Babel, Concat))
	1.2 - React
	1.3 - TypeScript
	1.4 - Deploy using Vercel

2. Dependencies
	-- Front-end
		2.1 - react-router-dom, react-toastify, react-icons, react-modal
		2.2 - axios
		2.3 - styled-components (Ñ gostei de usar)
		2.4 - tailwind css
		2.5 - nookies
		2.6 - framer-motion
		2.7 - APIS =>
			2.7.1 - SendGrid(send emails)
		2.8 - clsx

	-- Back-end
		3.1 - typescript
			3.1.1 - tsx
			3.1.2 - @types/node
			3.1.3 - tsup
		3.2 - prisma
			3.2.1 - @prisma/client
			3.2.2 - prisma-erd-generator
			3.2.3 - @mermaid-js/mermaid-cli
		3.3 - fastify
			3.3.1 - @fastify/cors
			3.3.2 - @fastify/jwt
			3.3.3 - fastify-type-provider-zod
			3.3.4 - @fastify/swagger | @fastify/swagger-ui
		3.4 - zod
3. DB -> Prisma
	4.1 - PostgresSQL
	4.2 - User and Cart models/tables
4. Cloud
	5.1 - Neon (DB PostgresSQL)
	5.2 - Render (API)
	5.3 - Vercel


!! Autenticação do lado server (jwt token) e web (cookie) pra ter permissão de fazer requests e acessar páginas
!! Vite (Env Variables) (import.meta.env.VITE_SOME_KEY)
-------------------------------

# 2025 Updates (v1.7):
## ✔️ To-Do:
- Use MySQL with Docker and host it on a reliable service
	- (The hosting services do not support MySQL, using Postgres instead)
- Create API documentation with Swagger
- Fix visual bugs and improve the code
- Use .env.local and ensure sensitive data is not exposed (even in development)
...
# ... Updates (v1.8):
## ✔️ To-Do:
- BackupCart model
- Some component to show visually


---
-> `From GestorDeVeiculo_desafio`:
## Git (Staging area):
- git reset head . (remover todos)
- git add -f <arquivo> (adicionar o que esta untraked)

## Git (Merge):
- git checkout -b temp-merge  (Crie uma branch temporária)
- git merge backend --no-ff
- git merge frontend --no-ff

## Git (usando Stash pra mover arquivos entre branches):
- git add -f front/.env.local back/.env back/docker-compose.yml (Pra adicionar no Staging)
- git stash push -m "Guardando arquivos não rastreados"
	- git stash -k (apenas os que estao no staging area)
- git stash list (ver lista)
- git stash apply stash@{1} (Se você quiser manter o stash após usá-lo, sem removê-lo da lista de stashes)
	- git stash pop stash@{1} (aplicar e remover)
- git reset HEAD front/.env.local back/.env back/docker-compose.yml (tirar do staging)
- git stash drop stash@{1} (remover)
- git stash show stash@{0} (ver o stash)